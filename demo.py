import numpy as np
import numpy.typing as npt
from typing import List

def make_dummy_arrays(n: int = 329151, m: int = 512) -> List[npt.NDArray]:
    res: List[npt.NDArray] = list()
    res = [
            np.arange(0, n * m).reshape((n, m)),
            np.arange(0, -1 * n * m, -1).reshape((n, m)),
            np.arange(n * m, n * m * 2).reshape((n, m)),
            np.arange(-n * m, -n * m * 2, -1).reshape((n, m)),
            ]
    return res


if __name__ == "__main__":
    # res = make_dummy_arrays()
    print("\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)\nCell \u001b[0;32mIn [16], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m chd \u001b[39m=\u001b[39m sar\u001b[39m.\u001b[39;49mmodels\u001b[39m.\u001b[39;49mChandrayaan2(\n\u001b[1;32m      2\u001b[0m     path\u001b[39m=\u001b[39;49mpath,\n\u001b[1;32m      3\u001b[0m     local_path\u001b[39m=\u001b[39;49mlocal_path\n\u001b[1;32m      4\u001b[0m )\n\nFile \u001b[0;32m~/btp/code/btp_code/sar/models.py:81\u001b[0m, in \u001b[0;36mChandrayaan2.__init__\u001b[0;34m(self, path, local_path)\u001b[0m\n\u001b[1;32m     79\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mpath \u001b[39m=\u001b[39m path\n\u001b[1;32m     80\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mlocal_path \u001b[39m=\u001b[39m local_path\n\u001b[0;32m---> 81\u001b[0m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mdateSARMap()\n\nFile \u001b[0;32m~/btp/code/btp_code/sar/models.py:86\u001b[0m, in \u001b[0;36mChandrayaan2.dateSARMap\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     84\u001b[0m sar_data_paths \u001b[39m=\u001b[39m [child \u001b[39mfor\u001b[39;00m child \u001b[39min\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mpath\u001b[39m.\u001b[39miterdir() \u001b[39mif\u001b[39;00m child\u001b[39m.\u001b[39mis_dir()]\n\u001b[1;32m     85\u001b[0m sar_data_dates \u001b[39m=\u001b[39m [path\u001b[39m.\u001b[39mname\u001b[39m.\u001b[39msplit(\u001b[39m\"\u001b[39m\u001b[39m_\u001b[39m\u001b[39m\"\u001b[39m)[\u001b[39m3\u001b[39m]\u001b[39m.\u001b[39msplit(\u001b[39m\"\u001b[39m\u001b[39mt\u001b[39m\u001b[39m\"\u001b[39m)[\u001b[39m0\u001b[39m] \u001b[39mfor\u001b[39;00m path \u001b[39min\u001b[39;00m sar_data_paths]\n\u001b[0;32m---> 86\u001b[0m sar_list \u001b[39m=\u001b[39m [\n\u001b[1;32m     87\u001b[0m         SARChandrayaan2(Path(path), \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mlocal_path \u001b[39m/\u001b[39m date)\n\u001b[1;32m     88\u001b[0m         \u001b[39mfor\u001b[39;00m path, date \u001b[39min\u001b[39;00m \u001b[39mzip\u001b[39m(sar_data_paths, sar_data_dates)\n\u001b[1;32m     89\u001b[0m         ]\n\u001b[1;32m     90\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mdate_map \u001b[39m=\u001b[39m {\n\u001b[1;32m     91\u001b[0m         SAR\u001b[39m.\u001b[39mdate : SAR\n\u001b[1;32m     92\u001b[0m         \u001b[39mfor\u001b[39;00m SAR \u001b[39min\u001b[39;00m sar_list\n\u001b[1;32m     93\u001b[0m         }\n\nFile \u001b[0;32m~/btp/code/btp_code/sar/models.py:87\u001b[0m, in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     84\u001b[0m sar_data_paths \u001b[39m=\u001b[39m [child \u001b[39mfor\u001b[39;00m child \u001b[39min\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mpath\u001b[39m.\u001b[39miterdir() \u001b[39mif\u001b[39;00m child\u001b[39m.\u001b[39mis_dir()]\n\u001b[1;32m     85\u001b[0m sar_data_dates \u001b[39m=\u001b[39m [path\u001b[39m.\u001b[39mname\u001b[39m.\u001b[39msplit(\u001b[39m\"\u001b[39m\u001b[39m_\u001b[39m\u001b[39m\"\u001b[39m)[\u001b[39m3\u001b[39m]\u001b[39m.\u001b[39msplit(\u001b[39m\"\u001b[39m\u001b[39mt\u001b[39m\u001b[39m\"\u001b[39m)[\u001b[39m0\u001b[39m] \u001b[39mfor\u001b[39;00m path \u001b[39min\u001b[39;00m sar_data_paths]\n\u001b[1;32m     86\u001b[0m sar_list \u001b[39m=\u001b[39m [\n\u001b[0;32m---> 87\u001b[0m         SARChandrayaan2(Path(path), \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mlocal_path \u001b[39m/\u001b[39;49m date)\n\u001b[1;32m     88\u001b[0m         \u001b[39mfor\u001b[39;00m path, date \u001b[39min\u001b[39;00m \u001b[39mzip\u001b[39m(sar_data_paths, sar_data_dates)\n\u001b[1;32m     89\u001b[0m         ]\n\u001b[1;32m     90\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mdate_map \u001b[39m=\u001b[39m {\n\u001b[1;32m     91\u001b[0m         SAR\u001b[39m.\u001b[39mdate : SAR\n\u001b[1;32m     92\u001b[0m         \u001b[39mfor\u001b[39;00m SAR \u001b[39min\u001b[39;00m sar_list\n\u001b[1;32m     93\u001b[0m         }\n\nFile \u001b[0;32m~/btp/code/btp_code/sar/models.py:37\u001b[0m, in \u001b[0;36mSARChandrayaan2.__init__\u001b[0;34m(self, path, local_path, force_load, **kwarg)\u001b[0m\n\u001b[1;32m     34\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mcalibrated_path \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mpath \u001b[39m/\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mdata\u001b[39m\u001b[39m\"\u001b[39m \u001b[39m/\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mcalibrated\u001b[39m\u001b[39m\"\u001b[39m \u001b[39m/\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mdate\n\u001b[1;32m     36\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m__check_local__() \u001b[39mand\u001b[39;00m \u001b[39mnot\u001b[39;00m force_load:\n\u001b[0;32m---> 37\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mload(\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mlocal_path)\n\u001b[1;32m     38\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m     39\u001b[0m     \u001b[39msuper\u001b[39m()\u001b[39m.\u001b[39m\u001b[39m__init__\u001b[39m(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m__load_coeffs__(), \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwarg)\n\nFile \u001b[0;32m~/btp/code/btp_code/sar/sar.py:59\u001b[0m, in \u001b[0;36mSAR.load\u001b[0;34m(self, path)\u001b[0m\n\u001b[1;32m     56\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_T \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m\n\u001b[1;32m     57\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_C \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m\n\u001b[0;32m---> 59\u001b[0m \u001b[39mwith\u001b[39;00m (path \u001b[39m/\u001b[39;49m \u001b[39m\"\u001b[39;49m\u001b[39mcoeffs.npy\u001b[39;49m\u001b[39m\"\u001b[39;49m)\u001b[39m.\u001b[39;49mopen(\u001b[39m'\u001b[39;49m\u001b[39mrb\u001b[39;49m\u001b[39m'\u001b[39;49m) \u001b[39mas\u001b[39;00m coeffs_file:\n\u001b[1;32m     60\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_coeffs \u001b[39m=\u001b[39m np\u001b[39m.\u001b[39mload(coeffs_file)\n\u001b[1;32m     61\u001b[0m \u001b[39mif\u001b[39;00m config[\u001b[39m'\u001b[39m\u001b[39mt_mat\u001b[39m\u001b[39m'\u001b[39m]:\n\nFile \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/pathlib.py:1119\u001b[0m, in \u001b[0;36mPath.open\u001b[0;34m(self, mode, buffering, encoding, errors, newline)\u001b[0m\n\u001b[1;32m   1117\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39m\"\u001b[39m\u001b[39mb\u001b[39m\u001b[39m\"\u001b[39m \u001b[39mnot\u001b[39;00m \u001b[39min\u001b[39;00m mode:\n\u001b[1;32m   1118\u001b[0m     encoding \u001b[39m=\u001b[39m io\u001b[39m.\u001b[39mtext_encoding(encoding)\n\u001b[0;32m-> 1119\u001b[0m \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_accessor\u001b[39m.\u001b[39;49mopen(\u001b[39mself\u001b[39;49m, mode, buffering, encoding, errors,\n\u001b[1;32m   1120\u001b[0m                            newline)\n\n\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/Users/divyankbeniwal/btp/code/btp_code/.local/chandrayaan2/20210312/coeffs.npy'")